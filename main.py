#System import
import os
from online import keep_alive
from gtts import gTTS

#discord additional import
import discord
from discord.ext import commands
from discord_slash import SlashCommand, SlashContext, ComponentContext
from discord_slash.utils.manage_commands import create_choice, create_option

#owner additional imported
from alert import Alert
from voice.action import Voice
from voice.music import SongAPI

#class for bot Setting
class Bot:
	Intents = discord.Intents.all()
	Prefix = "l."
	Token = os.environ['lavender']
		
Bot.Intents.members = True

client = commands.Bot(command_prefix= Bot.Prefix, intents= Bot.Intents)
Bot.Guilds = [g.id for g in client.guilds]

slash = SlashCommand(client, sync_commands = True)
alert = Alert(client)
voice = Voice(client)
music = SongAPI(client)

@client.event
async def on_ready():
	print(f"{client.user.name} is ready!")
	await music.cleanup()

@client.event
async def on_guild_join(guild):
	Bot.Guilds.append(guild.id)

@client.event
async def on_message(message):
	channel = message.channel
	guild = channel.guild

	music_channel = music.search(guild)
	bot = message.author.bot

	if music_channel is not None and channel == music_channel:
		
		if bot: return await message.edit(delete_after = 3)

		check = voice.is_none(guild)
		join = await voice.join(message.author, music_channel)
		
		if join:
			search = message
			await message.delete()
			await music.put(search, check)
			return
	
	if bot:return

	await client.process_commands(message)

@client.event
async def on_component(ctx:ComponentContext):
	log = ctx.custom_id

	if  log == "join_btn":
		await ctx.edit_origin(components = alert.join_btn_off)
		await voice.join(ctx, join_alert = True)
		return
	
	if log == "play":
		await music.play(ctx)
	
	if log == "skip":
		await music.skip(ctx)

	if log == "leave":
		await music.leave(ctx)

	if log == "pause":
		await music.pause(ctx)
	
	if log == "next":
		await music.queue_next(ctx)

	if log == "previous":
		await music.queue_previous(ctx)
	
	if log == "loop":
		await music.loop(ctx, 'one')

	if log == "loop_all":
		await music.loop(ctx, 'all')
	
	await ctx.edit_origin(content="")

@slash.slash(
	name = 'setup',
	description = "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°",
	guild_ids = Bot.Guilds,
	options = [
			create_option(
			name = "option",
			description	= "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
			option_type	= 3,
			required 	= True,
			choices 	= [
				create_choice(value = 'create', name = '‚ûï‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á'),
				create_choice(value = 'delete', name = '‚ûñ‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á')
			]
		)
	]
)
async def _setup(ctx:SlashContext, option:str):
	guild = ctx.channel.guild
	permission = False

	for role in ctx.author.roles:
		if role.permissions.manage_channels is True:
			permission = True
			break
		
		if role.permissions.administrator is True:
			permission = True
			break
	
	if permission is False: 
		await ctx.send("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞üòÅ")
		return

	if option == 'create':
		
		channel = music.search(guild)

		if channel is None:
			channel = await music.setup(guild)
			return await ctx.send(f"‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á{client.user.name} ‡πÅ‡∏•‡πâ‡∏ß {channel.mention}")
		
		return await ctx.send(f"{client.user.name}‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß {channel.mention}")

	if option == 'delete':
		
		channel = music.search(guild)

		if channel is not None:
			channel = await music.delete_setup(guild)
			return await ctx.send(f"‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á{client.user.name}‡πÅ‡∏•‡πâ‡∏ß")
		
		return await ctx.send(f"{client.user.name}‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á")
			
#command
@slash.slash(
	name="join",
	description = "‡∏ñ‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ò‡∏≠‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏á ‡πÄ‡∏£‡∏≤‡∏Ç‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡πÜ‡∏ô‡∏∞üò≥", 
	guild_ids = Bot.Guilds
)
async def _join(ctx: SlashContext):
	await voice.join(ctx, join_alert = True)

#command
@slash.slash(
	name = 'stop',
	description = "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏´‡∏¢‡∏∏‡∏î‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏á‡∏±‡πâ‡∏ô‡∏´‡∏£‡∏≠üò≥",
	guild_ids = Bot.Guilds
)
async def _stop(ctx: SlashContext):
	if ctx.author.voice is None:
		await ctx.send ("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏ô‡∏∞")
		return

	if ctx.voice_client is None: 
		await alert.vc_empty(ctx)
		return

	if ctx.author.voice.channel == ctx.voice_client.channel:
		if ctx.voice_client.is_playing:
			ctx.voice_client.stop()
			await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
		else:
			await ctx.send ("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
		return
	
	await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì")

#command
@slash.slash(
	name="pause", 
	description = "‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏û‡∏±‡∏Å ‡∏à‡∏¥‡∏ö‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡∏™‡∏±‡∏Å‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∞ü§§", 
	guild_ids = Bot.Guilds
)
async def _pause(ctx:SlashContext):
	if ctx.author.voice is None:
		await ctx.send ("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏ô‡∏∞")
		return

	if ctx.voice_client is None: 
		await alert.vc_empty(ctx)
		return
	
	if ctx.author.voice.channel == ctx.voice_client.channel:
		if ctx.voice_client.is_playing:
			ctx.voice_client.pause()
			await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏û‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")
		else:
			await ctx.send ("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
		return
	
	await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì")

#command
@slash.slash(
	name="resume", 
	description = "‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ßüòä", 
	guild_ids = Bot.Guilds
)
async def _resume(ctx:SlashContext):
	if ctx.author.voice is None:
		await ctx.send ("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏ô‡∏∞")
		return
		
	if ctx.voice_client is None: 
		await alert.vc_empty(ctx)
		return

	if ctx.author.voice.channel == ctx.voice_client.channel:
		if ctx.voice_client.is_paused:
			ctx.voice_client.resume()
			await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß")
		else:
			await ctx.send ("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏û‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
		return
	
	await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì")

#command
@slash.slash(
	name = 'disconnect',
	description = '‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
	guild_ids = Bot.Guilds
)
async def _disconnect(ctx:SlashContext):
	if ctx.author.voice is None:
		await ctx.send ("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏ô‡∏∞")
		return
		
	if ctx.voice_client is None: 
		await alert.vc_empty(ctx)
		return

	if ctx.author.voice.channel == ctx.voice_client.channel:
		await ctx.voice_client.disconnect()
		await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")
		return
	
	await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì")

#command
@slash.slash(
	name = 'speak',
	description = "‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏û‡∏π‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤",
	guild_ids = Bot.Guilds,
	options = [
		create_option(
			name = 'text',
			description = "‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏≠‡πà‡∏≤‡∏ô",
			option_type = 3,
			required = True
		)
	]
)
async def _speak(ctx:SlashContext, text:str):
	join = await voice.join(ctx.author, ctx.channel)

	if join:
		tts = gTTS(text = text, lang = 'th')
		tts.save('voice/source/tts.mp3')
		source = voice.pull_source('tts')

		try:
			ctx.voice_client.play(source)
		except:
			await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
			return
		else:
			await ctx.send(f"‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏û‡∏π‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á {ctx.voice_client.channel.mention} ‡πÅ‡∏•‡πâ‡∏ß")
			return

@slash.slash(
	name = '‡∏Ñ‡∏£‡∏™',
	description = "‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏û‡∏π‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤",
	guild_ids = Bot.Guilds,
)
async def d(ctx:SlashContext):
	join = await voice.join(ctx.author, ctx.channel)

	if join:
		source = voice.pull_source('‡∏Ñ‡∏£‡∏™')
		try:
			ctx.voice_client.play(source)
		except:
			await ctx.send("‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
			return
		else:
			await ctx.send(f"‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á {ctx.voice_client.channel.mention} ‡πÅ‡∏•‡πâ‡∏ß")
			return
		
keep_alive()
client.run(Bot.Token)