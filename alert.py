import discord
from component import button, ButtonGroup

#embed creator fix
def embed(alert:str):
	embed = discord.Embed()
	embed.description = alert
	embed.colour = discord.Colour.purple()
	embed.set_author(name = "üì¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô")
	return embed

#short sender
class Sender:

	def __init__(self, ctx):
		self.ctx = ctx

	async def send(self, alert:str):
		return await self.ctx.send(embed = embed(alert))

#alert base
class Alert:

	def __init__(self, ctx):
		self.sender = Sender(ctx)
		self.send = self.sender.send
	
	#create class for alert component
	@classmethod
	def component(cls, ctx):
		component = cls(ctx)
		component.bot = BotAlert(ctx.bot.user, ctx.channel)
		component.user = UserAlert(ctx.author, ctx)
		return component
	
	#create class for alert voice
	@classmethod
	def voice(cls, ctx):
		voice = cls(ctx)
		voice.user = UserAlert(ctx.author, ctx)
		voice.bot = BotAlert(ctx.bot.user, ctx)
		return voice
	
	#create class for alert something
	@classmethod
	def source(cls, ctx):
		alert = cls(ctx)
		alert.bot = BotAlert(ctx.author, ctx)
		alert.source = Source(ctx)
		return alert

	#create class for alert musicplayer
	@classmethod
	def music(cls, ctx):
		music = cls(ctx)
		music.player = Music(ctx.author , ctx.bot.user, ctx)
		music.user = UserAlert(ctx.author, ctx)
		music.bot = BotAlert(ctx.bot.user, ctx)
		return music

#user alert setting
class UserAlert:

	def __init__(self, user, ctx):
		self.user = user
		self.sender = Sender(ctx)
		self.send = self.sender.send

	async def empty(self, call:bool = False):
		return await self.send(f"‚ùé ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
	
	async def join(self, channel, call_self:bool):
		return await self.send(f"‚úÖ {self.user.name} ‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á {channel.mention} ‡πÅ‡∏•‡πâ‡∏ß")
	
	async def leave(self):
		return await self.send(f"‚ùå {self.user.name} ‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")
	
	async def disconnect(self, user):
		return await self.send(f"‚≠ï {self.user.name} ‡πÑ‡∏î‡πâ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ {user.name} ‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")

	async def now_together(self, user, channel):
		return await self.send(f"üçñ {user.name} ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡πà‡∏ß‡∏°‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á {channel.mention} ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏π‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
	
	async def not_together(self, user):
		return await self.send(f"ü•ó ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö {user.name} ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
	
	async def mustbe_together(self, user):
		return await self.send(f"ü•™ ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ö {user.name} ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞")

	async def must_join(self):
		return await self.send("üîä ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞")

	async def require_permission(self, name:str):
		return await self.send(f"üîí ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à {name} ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞")

#bot alert setting
class BotAlert:
	
	def __init__(self, bot, ctx):
		self.bot = bot
		self.sender = Sender(ctx)
		self.send = self.sender.send
	
	async def leave(self):
		return await self.send(f"‚≠ï {self.bot.name} ‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")
	
	async def join(self, channel):
		return await self.send(f"‚≠ï {self.bot.name} ‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á {channel.mention} ‡πÅ‡∏•‡πâ‡∏ß")
	
	async def empty(self):
		return await self.send(f"‚≠ï {self.bot.name} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")

	async def play(self, channel):
		return await self.send(f"‚≠ï {self.bot.name} ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á {channel.mention} ‡πÅ‡∏•‡πâ‡∏ß")
	
	async def stop(self):
		return await self.send(f"‚≠ï {self.bot.name} ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")

	async def busy(self):
		return await self.send(f"‚≠ï {self.bot.name} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")

	async def move_and_wait(self, channel):
		return await self.send(f"{self.bot.name} ‡πÑ‡∏î‡πâ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á {channel.mention} ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≠‡πÑ‡∏õ")
		
#music player alert setting
class Music:

	def __init__(self, user, bot, ctx):
		self.user = user
		self.bot = bot
		self.sender = Sender(ctx)
		self.sender2 = Sender(ctx.channel)
		self.channel = self.sender2.send
		self.send = self.sender.send
	
	async def error(self):
		return await self.send("‚≠ï ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á")

	async def skip(self):
		return await self.channel(f"‚≠ï {self.user.name} ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")
	
	async def disconnect(self):
		return await self.channel(f"‚≠ï {self.user.name} ‡πÑ‡∏î‡πâ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ {self.bot.name} ‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á")
	
	async def play(self):
		return await self.channel(f"‚≠ï {self.bot.name} ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß")
	
	async def pause(self):
		return await self.channel(f"‚≠ï {self.bot.name} ‡∏û‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÅ‡∏•‡πâ‡∏ß")
	
	async def loop_on(self):
		return await self.channel(f"‚≠ï {self.user.name} ‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ã‡πâ‡∏≥‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
	
	async def loop_off(self):
		return await self.channel(f"‚≠ï {self.user.name} ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ã‡πâ‡∏≥‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß")

	async def loop_all_on(self):
		return await self.channel(f"‚≠ï {self.user.name} ‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ã‡πâ‡∏≥‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß")
	
	async def loop_all_off(self):
		return await self.channel(f"‚≠ï {self.user.name} ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ã‡πâ‡∏≥‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß")
	
	async def setup(self, channel):
		return await self.send(f"‚≠ï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á {self.bot.name} ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á {channel.mention} ‡πÅ‡∏•‡πâ‡∏ß")
	
	async def unsetup(self):
		return await self.send("‚≠ï ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
	
	async def clear(self):
		return await self.channel(f"‚≠ï {self.bot.name} ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")

	async def exist(self, channel):
		return await self.send(f"‚≠ï ‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á {self.bot.name} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞ {channel.mention}")
	
	async def not_exist(self):
		return await self.send(f"‚≠ï {self.bot.name} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ô‡∏∞")

	async def not_found(self):
		return await self.send(f"‚≠ï {self.bot.name} ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô")


class Source:

	def __init__(self, ctx):
		self.send = Sender(ctx).send
		self.bot = ctx.bot.user
		self.ctx = ctx

	async def play(self, channel):
		return await self.ctx.send(
			content = '‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á',
			embed = embed(f"{self.bot.name} ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á {channel.mention} ‡πÅ‡∏•‡πâ‡∏ß"),
			components = [
				ButtonGroup(
					button(True, label = 'stop', id = 'stop', style = 'red')
				)
			]
		)

